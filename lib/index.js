// Generated by CoffeeScript 1.8.0
var Bowline, presentData, request;

presentData = require('./presenter');

request = require('request');

Bowline = (function() {
  function Bowline(options) {
    if (options == null) {
      options = {};
    }
    this.authorized = false;
    this.deviceId = options.deviceId;
    this.email = options.email;
    this.password = options.password;
    if (!(this.email && this.password && this.deviceId)) {
      throw new Error('missing required parameter');
    }
  }

  Bowline.prototype.authorize = function(callback) {
    var cookieJar, options;
    cookieJar = request.jar();
    options = {
      form: {
        email: this.email,
        password: this.password
      },
      jar: cookieJar,
      url: 'https://twine.cc/login'
    };
    return request.post(options, (function(_this) {
      return function(err, res, body) {
        _this.cookies = cookieJar;
        _this.authorized = true;
        return callback(err, null);
      };
    })(this));
  };

  Bowline.prototype.fetch = function(callback) {
    if (this.authorized) {
      return this.fetchData(callback);
    }
    return this.authorize((function(_this) {
      return function() {
        return _this.fetchData(callback);
      };
    })(this));
  };

  Bowline.prototype.fetchData = function(callback) {
    var options;
    options = {
      jar: this.cookies,
      json: true,
      url: "https://twine.cc/" + this.deviceId + "/rt?cached=1"
    };
    return request.get(options, function(err, res, body) {
      return callback(err, presentData(body));
    });
  };

  return Bowline;

})();

module.exports = Bowline;
